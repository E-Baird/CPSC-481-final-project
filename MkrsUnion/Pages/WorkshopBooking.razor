@page "/WorkshopBooking"
<PageTitle>Events</PageTitle>

<div class="text-center">
    <h1>Upcoming Events</h1>
</div>

<div class="wrksp-container">
    <div class="filter">
        <div class="filter1">
            <h5><button type="button" @onclick="ToggleFilter1">
                Category
            </button></h5>
            @if (toggle1) {
                <div class="card-body">
                    <div><input type="checkbox" id="c0"
                        @onclick='() => toggleShownCategories("Virtual")'
                    >
                        <label for="c0">Virtual</label>
                    </div>
                    <div><input type="checkbox" id="c1"
                        @onclick='() => toggleShownCategories("In-person")'
                    > 
                        <label for="c1">In-person</label>
                    </div>
                    <div><input type="checkbox" id="c2"
                        @onclick='() => toggleShownCategories("Orientation")'
                    >
                        <label for="c2">Orientation</label>
                    </div>
                    <div><input type="checkbox" id="c2"
                        @onclick='() => toggleShownCategories("Technology Training")'
                    >
                        <label for="c2">Technology Training</label>
                    </div>
                    <div><input type="checkbox" id="c2"
                        @onclick='() => toggleShownCategories("Community Event")'
                    >
                        <label for="c2">Community Event</label>
                    </div>
                </div>
            }
        </div>
        <div class="filter2">
            <h5><button type="button" @onclick="ToggleFilter2">
                Weekday
            </button></h5>
            @if (toggle2) {
                <div class="card-body">
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Sunday")'
                    >
                        <label for="d0">Sunday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Monday")'
                    >
                        <label for="d0">Monday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Tuesday")'
                    >
                        <label for="d0">Tuesday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Wednesday")'
                    >
                        <label for="d0">Wednesday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Thursday")'
                    >
                        <label for="d0">Thursday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Friday")'
                    >
                        <label for="d0">Friday</label>
                    </div>
                    <div><input type="checkbox" id="d0"
                        @onclick='() => toggleShownDays("Saturday")'
                    >
                        <label for="d0">Saturday</label>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="workshop-list">
        @{
            int i=0;
        }
        @foreach (var w in workshops)
        {
            if (
                // this is the case where no categories have been selected
                (!selectedCategories.Any() && 
                    (!selectedWeekdays.Any() ||
                    selectedWeekdays.Contains(w.weekday))
                ) ||
                // this is the case where no weekdays have been selected
                (!selectedWeekdays.Any() && 
                    compareSelectedCategories(selectedCategories, w.categories)
                ) ||
                // otherwise, both weekday and category must match
                (selectedWeekdays.Contains(w.weekday) && 
                compareSelectedCategories(selectedCategories, w.categories))
            )
            {
                <Workshop details=@w />
                i++;
            }
        }
        @if (i==0)
        {
            <div class="container text-center">
                <h4>Sorry, no events match your search.</h4>
            </div>
        }
    </div>
</div>

@code {
    bool toggle1 = false;
    bool toggle2 = false;

    public void ToggleFilter1() {
        toggle1 = !toggle1;
    }

    public void ToggleFilter2() {
        toggle2 = !toggle2;
    }

    // create a list of workshop objects to be displayed
    public List<WorkshopDetails> workshops => new List<WorkshopDetails>()
    {        
        new WorkshopDetails(
            "[IN-PERSON] Safety Orientation",
            new DateTime(2022, 4, 23).ToLongDateString(),
            new DateTime(2022, 4, 23).DayOfWeek.ToString(),
            "10:30am-12:00pm (MST)",
            new List<string>()
            {
                "Orientation",
                "Technology Training",
                "In-person"
            },
            "images/safetyworkshop.jpg",
            1,
            @"This is an in-person safety orientation, however you may
            choose to complete the orientation virtually by booking for the [ONLINE]
            Safety Orientation in the “Workshops and Events” page. An orientation is
            required for anyone wanting to access the Makerspace. The orientation
            has two parts: the first is a short orientation, the second is quiz.
            You must successfully complete a safety orientation in order to access
            the makerspace."
        ),

        new WorkshopDetails(
            "3D-Printed Board Games",
            new DateTime(2022, 4, 24).ToLongDateString(),
            new DateTime(2022, 4, 24).DayOfWeek.ToString(),
            "11:30am-1:00pm (MST)",
            new List<string>()
            {
                "Technology Training",
                "In-person"
            },
            "images/3dworkshop.jpg",
            2,
            @"This is a great workshop for people who are interested in getting
            into 3D printing but aren't sure where to start.
            Or maybe you are experienced and looking for a fun new project
            to work on. Students and faculty are welcome to come by and learn how to
            plan and build their own 3D printed board game."

        ),
        new WorkshopDetails(
            "[ONLINE] Safety Orientation",
            new DateTime(2022, 4, 23).ToLongDateString(),
            new DateTime(2022, 4, 23).DayOfWeek.ToString(),
            "1:30pm-3:00pm (MST)",
            new List<string>()
            {
                "Orientation",
                "Technology Training",
                "Virtual"
            },
            "images/safetyworkshop.jpg",
            2,
            @"This is an virtual safety orientation, however you may
            choose to complete the orientation in-person by booking for the [IN-PERSON]
            Safety Orientation in the “Workshops and Events” page. An orientation is
            required for anyone wanting to access the Makerspace. The orientation
            has two parts: the first is a short orientation, the second is quiz.
            You must successfully complete a safety orientation in order to access
            the makerspace."
        ),
        new WorkshopDetails(
            "Year-End Bash",
            new DateTime(2022, 4, 22).ToLongDateString(),
            new DateTime(2022, 4, 22).DayOfWeek.ToString(),
            "4:30pm-7:00pm (MST)",
            new List<string>()
            {
                "Community Event",
                "In-person"
            },
            "images/safetyworkshop.jpg",
            2,
            @"Join us for our year-end celebration. Connect with other community members
            to share project ideas, learn new skills, and maybe even find a collaborator.
            Feel free to bring something to work on, or just enjoy each other's company.
            Refreshments will be provided."
        )
    };

    // this code allows the user to show only workshops that match their chosen filters
    public List<string> selectedCategories = new List<string>();
    public List<string> selectedWeekdays = new List<string>();

    public void toggleShownCategories(string matchingFilter)
    {
        if (selectedCategories.Contains(matchingFilter))
        {
            selectedCategories.Remove(matchingFilter);
        } 
        else
        {
            selectedCategories.Add(matchingFilter);
        }
    }

    public void toggleShownDays(string matchingFilter)
    {
        if (selectedWeekdays.Contains(matchingFilter))
        {
            selectedWeekdays.Remove(matchingFilter);
        } 
        else
        {
            selectedWeekdays.Add(matchingFilter);
        }
    }
    public void resetFilters() 
    {
        selectedCategories.Clear();
        selectedWeekdays.Clear();
    }

    // returns true if 2 lists share any elements
    public bool compareSelectedCategories(List<string> l1, List<string> l2)
    {
        return l1.Intersect(l2).Any();
    }

}
